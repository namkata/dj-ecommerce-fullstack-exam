# Generated by Django 4.2 on 2025-02-23 07:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', models.ImageField(blank=True, help_text="User's profile picture.", null=True, upload_to='profile_pictures/')),
                ('date_of_birth', models.DateField(blank=True, help_text="User's date of birth (YYYY-MM-DD).", null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], help_text="User's gender.", max_length=10, null=True)),
                ('wallet_balance', models.DecimalField(decimal_places=2, default=0.0, help_text="User's wallet balance (currency: VND).", max_digits=10)),
                ('loyalty_points', models.PositiveIntegerField(default=0, help_text="User's accumulated loyalty points.")),
                ('newsletter_subscribed', models.BooleanField(default=True, help_text='Is the user subscribed to email newsletters?')),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('vi', 'Vietnamese')], default='en', help_text="User's preferred language.", max_length=10)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the record was last updated.')),
                ('phone_number', models.CharField(help_text="User's phone number.", max_length=15, unique=True)),
                ('is_primary', models.BooleanField(default=False, help_text="Is this the user's primary phone number?")),
                ('is_phone_verified', models.BooleanField(default=False, help_text='Has the phone number been verified?')),
                ('created_by', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='The user who last updated this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='The user who owns this phone number.', on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the record was last updated.')),
                ('address_line1', models.CharField(help_text='Primary address line (required).', max_length=255)),
                ('address_line2', models.CharField(blank=True, help_text='Secondary address line (optional).', max_length=255, null=True)),
                ('city', models.CharField(help_text='City of the address.', max_length=100)),
                ('state', models.CharField(help_text='State/region of the address (if applicable).', max_length=100)),
                ('postal_code', models.CharField(help_text='Postal code of the address.', max_length=20)),
                ('country', models.CharField(help_text='Country of the address.', max_length=100)),
                ('created_by', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.ForeignKey(blank=True, help_text='Phone number associated with this address.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addresses', to='auths.phonenumber')),
                ('updated_by', models.ForeignKey(blank=True, help_text='The user who last updated this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='The user who owns this address.', on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the record was last updated.')),
                ('otp', models.CharField(help_text='6-digit OTP code for phone verification.', max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time when the OTP was generated.')),
                ('expires_at', models.DateTimeField(help_text='Expiration time of the OTP.')),
                ('is_used', models.BooleanField(default=False, help_text='Indicates if the OTP has been used.')),
                ('created_by', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.ForeignKey(help_text='Phone number being verified.', on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='auths.phonenumber')),
                ('updated_by', models.ForeignKey(blank=True, help_text='The user who last updated this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='User associated with OTP verification.', on_delete=django.db.models.deletion.CASCADE, related_name='phone_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='default_address',
            field=models.ForeignKey(blank=True, help_text="User's default address.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_user', to='auths.useraddress'),
        ),
        migrations.AddField(
            model_name='user',
            name='default_phone_number',
            field=models.ForeignKey(blank=True, help_text="User's default phone number.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_user', to='auths.phonenumber'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
